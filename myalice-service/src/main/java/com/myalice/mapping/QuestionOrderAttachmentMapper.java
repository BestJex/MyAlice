package com.myalice.mapping;

import com.myalice.domain.QuestionOrderAttachment;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface QuestionOrderAttachmentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_order_attachment
     *
     * @mbg.generated
     */
    @Delete({
        "delete from question_order_attachment",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_order_attachment
     *
     * @mbg.generated
     */
    @Insert({
        "insert into question_order_attachment (id, question_order_id, ",
        "create_time, status, ",
        "url)",
        "values (#{id,jdbcType=VARCHAR}, #{questionOrderId,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, ",
        "#{url,jdbcType=VARCHAR})"
    })
    int insert(QuestionOrderAttachment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_order_attachment
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, question_order_id, create_time, status, url",
        "from question_order_attachment",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="question_order_id", property="questionOrderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR)
    })
    QuestionOrderAttachment selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_order_attachment
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, question_order_id, create_time, status, url",
        "from question_order_attachment"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="question_order_id", property="questionOrderId", jdbcType=JdbcType.VARCHAR),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.TINYINT),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR)
    })
    List<QuestionOrderAttachment> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_order_attachment
     *
     * @mbg.generated
     */
    @Update({
        "update question_order_attachment",
        "set question_order_id = #{questionOrderId,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "status = #{status,jdbcType=TINYINT},",
          "url = #{url,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(QuestionOrderAttachment record);
}