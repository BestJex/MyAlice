package com.myalice.mapping;

import com.myalice.domain.QuestionRecord;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface QuestionRecordMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_record
     *
     * @mbg.generated
     */
    @Delete({
        "delete from question_record",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_record
     *
     * @mbg.generated
     */
    @Insert({
        "insert into question_record (id, create_time, ",
        "content, commit_user, ",
        "userType, question_order_id)",
        "values (#{id,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{content,jdbcType=VARCHAR}, #{commitUser,jdbcType=VARCHAR}, ",
        "#{usertype,jdbcType=TINYINT}, #{questionOrderId,jdbcType=VARCHAR})"
    })
    int insert(QuestionRecord record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_record
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, create_time, content, commit_user, userType, question_order_id",
        "from question_record",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="commit_user", property="commitUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="userType", property="usertype", jdbcType=JdbcType.TINYINT),
        @Result(column="question_order_id", property="questionOrderId", jdbcType=JdbcType.VARCHAR)
    })
    QuestionRecord selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_record
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, create_time, content, commit_user, userType, question_order_id",
        "from question_record"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="commit_user", property="commitUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="userType", property="usertype", jdbcType=JdbcType.TINYINT),
        @Result(column="question_order_id", property="questionOrderId", jdbcType=JdbcType.VARCHAR)
    })
    List<QuestionRecord> selectAll();

    
    @Select({
        "select",
        "id, create_time, content, commit_user, userType, question_order_id",
        "from question_record where question_order_id= #{orderId,jdbcType=VARCHAR} order by create_time asc"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="content", property="content", jdbcType=JdbcType.VARCHAR),
        @Result(column="commit_user", property="commitUser", jdbcType=JdbcType.VARCHAR),
        @Result(column="userType", property="usertype", jdbcType=JdbcType.TINYINT),
        @Result(column="question_order_id", property="questionOrderId", jdbcType=JdbcType.VARCHAR)
    })
    List<QuestionRecord> selectQoRecord(@Param("orderId")String orderId);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table question_record
     *
     * @mbg.generated
     */
    @Update({
        "update question_record",
        "set create_time = #{createTime,jdbcType=TIMESTAMP},",
          "content = #{content,jdbcType=VARCHAR},",
          "commit_user = #{commitUser,jdbcType=VARCHAR},",
          "userType = #{usertype,jdbcType=TINYINT},",
          "question_order_id = #{questionOrderId,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(QuestionRecord record);
}